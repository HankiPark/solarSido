<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="solar.eqm.unop.service.impl.UnopMapper">
	
	<select id="selectUnopCdAll" resultType="solar.eqm.unop.service.UnopCdVO">
		select*from uopr_cd
		order by uopr_cd
	</select>


	<update id="updateEqmYn" parameterType="map">
		update
			eqm
		set
			eqm_yn = #{eqmYn}
		where
			eqm_cd = #{eqmCd}
	</update>
	
	<insert id="eqmuoInsert" parameterType="map">
		insert into
			eqm_uo(
				eqm_uo_no,
				fr_tm,
				eqm_cd,
				uopr_cd
			)
		values(
			eqmuoseq.nextval,
			sysdate,
			#{eqmCd},
			#{uoprCd}
		)
	</insert>
	
	<select id="selectUnopList" resultType="solar.eqm.unop.service.UnopVO">
		select
			to_number(eu.eqm_uo_no) "EQM_UO_NO",
            eu.fr_tm,
            eu.to_tm,
            eu.eqm_cd,
            eu.uopr_cd,
            e.eqm_nm,
            uc.uopr_nm
		from
			eqm_uo eu
		join eqm e
			on eu.eqm_cd = e.eqm_cd
		join uopr_cd uc
			on uc.uopr_cd = eu.uopr_cd
		where 1=1
		<if test='eqmCd != null and eqmCd !=""'>
			and eu.eqm_cd = #{eqmCd}
		</if>
		<if test="eqmParam != null and eqmParam != ''">
				and(
					e.eqm_cd like '%'||#{eqmParam}||'%'
					or e.eqm_nm like '%'||#{eqmParam}||'%'
				)
			</if>
		order by 1 desc
	</select>
	
	<select id="selectUnop" parameterType="map" resultType="solar.eqm.unop.service.UnopVO">
		select
			fr_tm,
			uopr_cd
		from
			eqm_uo
		where 1=1 
			and eqm_cd = #{eqmCd}
			and to_tm is null
	</select>
	
	<update id="updateToTm" parameterType="map">
		update
			eqm_uo
		set
			to_tm = sysdate
		where 1=1 
			and eqm_cd = #{eqmCd}
			and to_tm is null
	</update>
	
	
	<select id="uoGraph" resultType="solar.eqm.unop.service.UoGraphVO" parameterType="map">
		select
			eqm_cd,
			eqm_nm,
			sum(days) "DAYS",
			sum(hours) "HOURS",
			sum(minutes) "MINUTES",
			sum(seconds) "SECONDS"
		from
			(select
			    eu.eqm_cd,
			    e.eqm_nm,
			    trunc(nvl(to_tm,sysdate) - fr_tm) "DAYS",
			    trunc((nvl(to_tm,sysdate) - fr_tm)*24) "HOURS",
			    trunc((nvl(to_tm,sysdate) - fr_tm)*24*60) "MINUTES",
			    trunc((nvl(to_tm,sysdate) - fr_tm)*24*60*60) "SECONDS"
			from eqm_uo eu
			join eqm e
			    on eu.eqm_cd = e.eqm_cd
			where 1=1
				<if test='eqmCds.size != 0'>
			    	and eu.eqm_cd in
			    		<foreach collection="eqmCds" item="eqmCd" separator="," open="(" close=")" index="index">
			    			#{eqmCd}
			    		</foreach>
				</if>
			order by 1)
		group by eqm_cd, eqm_nm
	</select>
</mapper>