<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="solar.sales.inout.service.impl.PrdtMapper">
	<select id="findList" resultType="Prdt">
		select p.prdt_lot,
		p.prdt_dt,
		p.prdt_cd,
		o.prdt_nm,
		o.prdt_spec,
		k.indica_no
		from prdt_stc p join prdt o
		on p.prdt_cd = o.prdt_cd
		join
		indica_d k
		on p.indica_deta_no=k.indica_deta_no
		where
			   	<![CDATA[	
					TO_CHAR(p.prdt_dt,'yyyyMMdd')>= TO_CHAR(#{startT},'yyyyMMdd') and TO_CHAR(p.prdt_dt,'yyyyMMdd')<= TO_CHAR( #{endT},'yyyyMMdd')
				]]>
		<if test="prdNm !=null and prdNm !=''">
			and o.prdt_nm=#{prdNm}
		</if>
		<choose>
			<when test="prdSt !=null and prdSt !=''">
				and p.prdt_fg = #{prdSt} and p.prdt_lot not in
				(select prdt_lot from
				prdt_stc where prdt_fg ='I')
			</when>
			<otherwise>
				and p.prdt_fg = 'I' and prdt_lot in	
	                            (select prdt_lot from prdt_stc where prdt_fg='I') 
	                        and prdt_lot not in
	                            (select prdt_lot from prdt_stc where prdt_fg='O' or prdt_fg='OW')
			</otherwise>
		</choose>

		order by p.prdt_dt asc

	</select>

	<select id="findPrdt" resultType="Prdt">
		select * from prdt
		<where>
			<choose>
				<when
					test="prdCd !=null and prdCd!='' and prdNm!=null and prdNm!=''">
					prdt_cd=#{prdCd} and prdt_nm=#{prdNm}
				</when>
				<when test="prdCd !=null and prdCd!=''">
					prdt_cd=#{prdCd}
				</when>
				<when test=" prdNm!=null and prdNm!=''">
					prdt_nm=#{prdNm}
				</when>
			</choose>
		</where>
		order by prdt_cd asc

	</select>
	<!-- 회사 조회 -->
	<select id="findCo" resultType="Prdt">
		select * from co
		<where>
			<if test="coFg ='P'">
				co_fg='P'
			</if>
		</where>
	</select>
	<!-- 전표번호 조회 -->
	<select id="findSlip" resultType="Prdt">
		select slip_no,prdt_dt,co_nm,DCNT('oust',slip_no) as slNm from oust
		where
			   	<![CDATA[	
					TO_CHAR(prdt_dt,'yyyyMMdd')>= TO_CHAR(#{startT},'yyyyMMdd') and TO_CHAR(prdt_dt,'yyyyMMdd')<= TO_CHAR( #{endT},'yyyyMMdd')
				]]>
		<if test="coNm!=null and coNm!=''">
			and co_nm =#{coNm}
		</if>

	</select>
	<!-- 화면표기 숫자를 위함 -->
	<select id="makeNum" resultType="String">
		SELECT LPAD(nvl((select
		max(TO_NUMBER(substr(slip_no,12))) from oust),0)+1,3,'0') from dual
	</select>

	<!-- 재고가 있는 주문서 조회 -->
	<select id="OutOrderList" resultType="Prdt">
		select distinct o.order_no,
		o.recv_dt,
		o.co_cd,
		(select co_nm from co where	co_cd=o.co_cd) as co_nm,
		o.paprd_dt 
		from order_tb o 
		join order_d d 
		on o.order_no =d.order_no
		where d.prdt_cd in 
					(select prdt_cd from prdt_stc where prdt_fg='I' and prdt_fg!='O') 
			 and o.prog_info !='종료'
				
		order by o.paprd_dt asc


	</select>
	<!-- 주문번호에서 입고중인 제품이 있을때 제품 list -->
	<select id="OutOrderCdList" resultType="Prdt">
	select o.prdt_cd,
			o.order_qty,
			o.prdt_stc,
			(select prdt_nm from prdt where prdt_cd = o.prdt_cd) as prdt_nm,
			(select prdt_amt from prdt where prdt_cd = o.prdt_cd) as prdt_amt,
			(o.order_qty-nvl(o.oust_qty,0)) as rest_qty  
	from order_d o 
	where order_no = #{orderNo}
		and prdt_cd in
				(select prdt_cd from prdt_stc where prdt_fg='I' and prdt_fg!='O') 
	order by prdt_cd asc   
	</select>
	
<!--  출고량을 눌렀을때 뜨는 리스트-->
	<select id="OutWaitList" resultType="Prdt">
	select distinct prdt_lot,prdt_cd,prdt_fg,#{indicaDetaNo} as indica_deta_no  from prdt_stc where prdt_cd=#{prdtCd} and 
	                        prdt_lot in	
	                            (select prdt_lot from prdt_stc where prdt_fg='I') 
	                        and prdt_lot not in
	                            (select prdt_lot from prdt_stc where prdt_fg='O' or prdt_fg='OW')
	                        and prdt_fg='I'
	        or (prdt_fg ='OW' and indica_deta_no=#{indicaDetaNo} and prdt_cd=#{prdtCd})
	            
	</select>



	<!-- 출고전표 -->
	<insert id="insertSlip">
		insert into oust
		values(CREATENO('SLI',SLIPSEQ.nextval),sysdate,#{coNm})
	</insert>
	<!-- 출고전표디테일 그리드화 되어야함 -->
	<insert id="insertSlipDetail">
		<selectKey keyProperty="detail" resultType="int"
			order="BEFORE"> select nvl(max(SLIP_DETA_NO),0)+1 from oust_d
		</selectKey>


		insert into oust_d
		values(detail,#{prdtLot},#{slipNo},#{orderNo},#{orderCnt},#{prdtAmt},#{prdtStc}
		)
	</insert>




	<insert id="insertInPrdt">
		insert into prdt_stc select
		prdt_inx,#{prdtLot},'I',prdt_cd,indica_deta_no,#{prdtDt} from prdt_stc
		where
		prdt_lot =#{prdtLot}
	</insert>

	<delete id="deleteInPrdt">
		delete from prdt_stc where prdt_lot=#{prdtLot} and
		prdt_fg ='I'

	</delete>


	<delete id="resetOw">
		delete from prdt_stc where prdt_fg='OW'
		<if test="indicaDetaNo!=null and indicaDetaNo!='' ">
		 and indica_deta_no=#{indicaDetaNo} 
		 </if>
	</delete>

	<insert id="insertOw">
		insert into prdt_stc 
				select prdt_inx,
						prdt_lot,
						'OW',
						prdt_cd,
						#{indicaDetaNo},
						sysdate 
					from prdt_stc 
					where prdt_lot = #{prdtLot} 
							and prdt_fg='I'
	</insert>


	<update id="updateInPrdt">
		merge into prdt_stc a
		using (select
		prdt_inx,indica_deta_no
		from prdt_stc
		where prdt_lot = #{prdtLot} and
		prdt_fg ='C') b
		on (b.prdt_inx = #{prdtInx})
		when matched then
		update set
		a.prdt_lot = #{prdtLot},prdt_dt=#{prdtDt}
		where a.prdt_inx = #{prdtInx}
		when not matched then
		insert
		values(
		b.prdt_inx, #{prdtLot}, 'I',
		#{prdtCd}, b.indica_deta_no, #{prdtDt}
		)

	</update>

	<insert id="insertOutPrdt">
		insert into oust values(#{slipNo},#{prdtDt},#{coNm})
	</insert>
	<insert id="insertOutD">

		insert into oust_d values(
		SLIPSEQ.nextval,#{slipNo},#{orderNo},#{orderQty},#{prdtStc},nvl(#{oustQty},0),#{prdtCd},#{prdtUntprc})

	</insert>
	<insert id="updateStatePrdt">
		insert into prdt_stc select
		prdt_inx,prdt_lot,'O',prdt_cd,(select o.slip_deta_no from oust_d o where o.order_no = #{orderNo} and o.prdt_cd=#{prdtCd} and o.slip_no=#{slipNo}),#{prdtDt} from prdt_stc
		where
		prdt_lot in (select prdt_lot from prdt_stc where prdt_fg ='OW') and prdt_fg='OW'
	</insert>
	<update id="updOrd">
		update order_d set oust_qty =oust_qty+nvl(#{oustQty},0) where order_no=#{orderNo} and prdt_cd=#{prdtCd}
	</update>

	<delete id="deleteOutPrdt">
		delete from prdt_stc where prdt_lot=#{prdtLot} and
		prdt_fg ='O'

	</delete>

	<update id="updateOutPrdt">
		update oust_d set 1=1

	</update>
</mapper>